jobs:
  include:
    - stage: Test
      if: branch != master OR type = pull_request
      name: 'Unit tests'
      language: node_js
      node_js: [node]
      cache: { directories: [node_modules, '~/.npm', '~/.cache'] }
      script:
        - npm run coverage && cat ./coverage/lcov.info | coveralls

    - stage: Test
      if: branch =~ /cypress/ OR (type = pull_request AND branch IN (staging, master))
      name: 'Integration tests'
      language: node_js
      node_js: [node]
      sudo: required
      services: [docker]
      cache: { directories: [node_modules, '~/.npm', '~/.cache'] }
      script:
        # Shutdown postgres instances - see https://github.com/travis-ci/travis-ci/issues/4842#issuecomment-311527059
        - sudo service postgresql stop
        - while sudo lsof -Pi :5432 -sTCP:LISTEN -t; do sleep 1; done
        # Start API
        - docker-compose up -d || exit 1
        # Build and start Frontend
        - npm start &
        # Run Cypress
        - npm run cypress -- --record --key ${CYPRESS_RECORD_KEY}
        # Shutdown Frontend and API
        - kill $(jobs -p) || true
        - docker-compose down

    - stage: deploy
      if: type IN (push, api) AND (branch IN (master, staging) OR tag =~ ^v\d+)
      language: generic
      sudo: required
      services: [docker]
      env:
        - CF_FRONTEND_IMAGE=captainfact/frontend:$TRAVIS_BRANCH
      script:
        - docker build --build-arg BUILD_ENV=$TRAVIS_BRANCH -t $CF_FRONTEND_IMAGE . &&
          docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD";
          echo "Pushing $CF_FRONTEND_IMAGE";
          docker push $CF_FRONTEND_IMAGE;
